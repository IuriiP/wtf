<?php

namespace Wtf\Core;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-03-06 at 12:49:27.
 */
class ResponseTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var Response
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 * @covers Wtf\Core\Response::headers
	 * @covers Wtf\Core\Response::header
	 * @runInSeparateProcess
	 */
	public function testHeaders() {
		$stub = $this->getMockForAbstractClass(Response::class);

		$this->assertSame($stub, $stub->headers(['Foo' => 'foo', 'Bar' => [1, 2]]));
		$this->assertAttributeEquals(['Foo' => 'foo', 'Bar' => [1, 2]], '_headers', $stub);
		$this->assertSame($stub, $stub->headers());
		$this->assertAttributeEquals([], '_headers', $stub);
		$this->assertSame($stub, $stub->headers(['Foo' => 'foo']));
		$this->assertAttributeEquals(['Foo' => 'foo'], '_headers', $stub);
		$this->assertSame($stub, $stub->headers(['Foo' => 'boo']));
		$this->assertAttributeEquals(['Foo' => 'boo'], '_headers', $stub);
		$this->assertSame($stub, $stub->header('Bar', 'bar'));
		$this->assertAttributeEquals(['Foo' => 'boo', 'Bar' => 'bar'], '_headers', $stub);
	}

	/**
	 * @covers Wtf\Core\Response::code
	 */
	public function testCode() {
		$stub = $this->getMockForAbstractClass(Response::class);

		$this->assertSame($stub, $stub->code(222));
		$this->assertAttributeEquals(222, '_code', $stub);
	}

	/**
	 * @covers Wtf\Core\Response::clear
	 */
	public function testClear() {
		$stub = $this->getMockForAbstractClass(Response::class);
		$stub->method('clear')
			->willReturn('OK');

		$this->assertEquals('OK', $stub->clear());
	}

	/**
	 * @covers Wtf\Core\Response::redirect
	 */
	public function testRedirect() {
		
	}

	/**
	 * @covers Wtf\Core\Response::send
	 */
	public function testSend() {
		
	}

	/**
	 * @covers Wtf\Core\Response::factory
	 * @todo   Implement testFactory().
	 */
	public function testFactory() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Wtf\Core\Response::make
	 * @todo   Implement testMake().
	 */
	public function testMake() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Wtf\Core\Response::__callStatic
	 * @todo   Implement test__callStatic().
	 */
	public function test__callStatic() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

}
