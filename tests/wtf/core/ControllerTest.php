<?php

namespace Wtf\Core;

class ControllerMock extends Controller {

	public function __call($name, $arguments) {
		return [
			'function' => $name,
			'arguments' => $arguments[0],
		];
	}

	public function funcExists($named_args) {
		return [
			'function' => __FUNCTION__,
			'arguments' => $named_args,
		];
	}
}

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-02-21 at 11:20:22.
 */
class ControllerTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var Controller
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 * @covers Wtf\Core\Controller::__construct
	 * @expectedException PHPUnit_Framework_Error
	 * @expectedExceptionMessage Missing argument
	 */
	public function test__construct() {
		$obj = new ControllerMock('dumb');
		$this->assertInstanceOf(Controller::class, $obj);
		$ref = new \ReflectionObject($obj);
		$app = $ref->getProperty('app');
		$app->setAccessible(true);
		$this->assertEquals('dumb', $app->getValue($obj));

		$obj = new ControllerMock();
	}

	/**
	 * @covers Wtf\Core\Controller::__call
	 */
	public function test__call() {
		$obj = new ControllerMock('dumb');

		$this->assertEquals([
			'function' => 'funcExists',
			'arguments' => ['baz' => true, 'bar' => 42, 'foo' => 'some'],
			], $obj->funcExists(['baz' => true, 'bar' => 42, 'foo' => 'some']));

		$this->assertEquals([
			'function' => 'funcNotExists',
			'arguments' => ['baz' => true, 'bar' => 42, 'foo' => 'some'],
			], $obj->funcNotExists(['baz' => true, 'bar' => 42, 'foo' => 'some']));
	}

}
